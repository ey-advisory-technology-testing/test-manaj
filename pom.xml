
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ey</groupId>
	<artifactId>test-manaj</artifactId>
	<version>1.0.4</version>
	<packaging>jar</packaging>

	<name>test-manaj</name>
	<developers>
		<developer>
			<email>manjunath.purad@gds.ey.com</email>
			<name>Manju</name>
			<organization>EY</organization>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<cucumber.version>4.2.6</cucumber.version>
	</properties>
	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub ey-advisory-technology-testing Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/ey-advisory-technology-testing/test-manaj</url>
		</repository>
	</distributionManagement>
	<organization>
		<name>EY LLP</name>
		<url>http://ey.com</url>
	</organization>


	<dependencies>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180813</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.15</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.http-client/google-http-client -->
		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<version>1.30.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.http-client/google-http-client-jackson2 -->
		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client-jackson2</artifactId>
			<version>1.30.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->

		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.14.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>27.0.1-jre</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.9.9</version>
		</dependency>

		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.3.3</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-android</artifactId>
			<version>3.3.3</version>
			<type>pom</type>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-netty</artifactId>
			<version>5.11.1</version>
		</dependency>

		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.5</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven
				defaults (may be moved to parent pom) -->
			<plugins>
				<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
<!--				<plugin>-->
<!--					<groupId>org.jacoco</groupId>-->
<!--					<artifactId>jacoco-maven-plugin</artifactId>-->
<!--					<version>0.8.5</version>-->
<!--					<executions>-->
<!--					<execution>-->
<!--						<id>instrument</id>-->
<!--						<phase>process-test-classes</phase>-->
<!--						<goals>-->
<!--							<goal>instrument</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--					<id>restore-instrumented-classes</id>-->
<!--					<phase>test</phase>-->
<!--					<goals>-->
<!--						<goal>restore-instrumented-classes</goal>-->
<!--					</goals>-->
<!--					</execution>-->
<!--						<execution>-->
<!--							&lt;!&ndash; Ensures that the code coverage report for unit tests is created-->
<!--                           after unit tests have been run. &ndash;&gt;-->
<!--							<id>post-unit-test</id>-->
<!--							<phase>test</phase>-->
<!--							<goals>-->
<!--								<goal>report</goal>-->
<!--							</goals>-->
<!--							<configuration>-->
<!--								&lt;!&ndash; Sets the output directory for the code coverage report. &ndash;&gt;-->
<!--								<outputDirectory>$/jacoco</outputDirectory>-->
<!--							</configuration>-->
<!--						</execution>-->
<!--					</executions>-->
<!--				</plugin>-->
<!--				<plugin>-->
<!--					<groupId>org.apache.maven.plugins</groupId>-->
<!--					<artifactId>maven-surefire-plugin</artifactId>-->
<!--					<version>3.0.0-M3</version>-->
<!--					<configuration>-->
<!--						<systemPropertyVariables>-->
<!--							<jacoco-agent.destfile>$/jacoco.exec</jacoco-agent.destfile>-->
<!--						</systemPropertyVariables>-->
<!--					</configuration>-->
<!--				</plugin>-->

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.5</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>default-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.10</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->

				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>1.0.2</version>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>transform</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<transformationSets>
							<transformationSet>
								<dir>${project.build.directory}/checkstyle</dir>
								<stylesheet>src/test/resources/checkstyle/checkstyle-author.xsl</stylesheet>
								<includes>checkstyle-result.xml</includes>
								<outputDir>${project.build.directory}/checkstyle</outputDir>
								<fileMappers>
									<fileMapper
											implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
										<pattern>\.xml$</pattern>
										<replacement>.html</replacement>
									</fileMapper>
								</fileMappers>
							</transformationSet>
						</transformationSets>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
