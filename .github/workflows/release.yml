# This workflow will build a Java project with Maven

# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: release
on:
  push:
    branches:
      - master
    paths:
      - '/src/**'
      - 'pom.xml'
      - '.github/**'  
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: setup-maven-settings
        uses: whelk-io/maven-settings-xml-action@v12
        with:
          repositories: '[{ "id": "github", "name": "GitHub ey-advisory-technology-testing Apache Maven Packages", "url": "https://maven.pkg.github.com/ey-advisory-technology-testing/*", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
          servers: '[{"id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.ACCESS_TOKEN }}"}]'

      - name: Checkout Branch
        uses: actions/checkout@v2.3.2

      - name: Set up JDK 14
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 14.0.2
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Get artifact version
        run: |
          echo version=v$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout | awk '{print $1}') >> $GITHUB_ENV
          echo version_title=Release v$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout | awk '{print $1}') >> $GITHUB_ENV
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -Dregistry=https://maven.pkg.github.com/ey-advisory-technology-testing -Dtoken=${{ secrets.ACCESS_TOKEN }}

      - name: Release Activities
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.version }}"
          prerelease: true
          title: "${{ env.version_title }}"
          files: |
            README.md
            **/*.jar